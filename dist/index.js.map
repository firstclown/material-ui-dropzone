{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\n    if (file.type.split('/')[0] === 'image') {\n        return true;\n    }\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n    let size = '';\n    if (filesize >= 1048576) {\n        size = (filesize / 1048576) + ' megabytes';\n    } else if (filesize >= 1024) {\n        size = (filesize / 1024) + ' kilobytes';\n    } else {\n        size = filesize + ' bytes';\n    }\n    return size;\n}\n\nexport async function createFileFromUrl(url) {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const metadata = {type: data.type};\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\n    return new File([data], filename, metadata);\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event?.target?.result);\n        };\n        reader.onerror = (event) => {\n            reader.abort();\n            reject(event);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import Chip from \"@mui/material/Chip\";\nimport Fab from \"@mui/material/Fab\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { withStyles } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport clsx from \"clsx\";\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst styles = ({ palette, shape, spacing }) => ({\n  root: {},\n  imageContainer: {\n    position: \"relative\",\n    zIndex: 10,\n    textAlign: \"center\",\n    \"&:hover $image\": {\n      opacity: 0.3,\n    },\n    \"&:hover $removeButton\": {\n      opacity: 1,\n    },\n  },\n  image: {\n    height: 100,\n    width: \"initial\",\n    maxWidth: \"100%\",\n    color: palette?.text?.primary,\n    transition: \"all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms\",\n    boxSizing: \"border-box\",\n    boxShadow: \"rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px\",\n    borderRadius: shape?.borderRadius,\n    zIndex: 5,\n    opacity: 1,\n  },\n  removeButton: {\n    transition: \".5s ease\",\n    position: \"absolute\",\n    opacity: 0,\n    top: spacing?.(-1),\n    right: spacing?.(-1),\n    width: 40,\n    height: 40,\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n});\n\nfunction PreviewList({\n  fileObjects,\n  handleRemove,\n  showFileNames,\n  useChipsForPreview,\n  previewChipProps,\n  previewGridClasses,\n  previewGridProps,\n  classes,\n  getPreviewIcon,\n}) {\n  if (useChipsForPreview) {\n    return (\n      <Grid\n        spacing={1}\n        direction=\"row\"\n        {...previewGridProps.container}\n        container={true}\n        className={clsx(classes.root, previewGridClasses.container)}\n      >\n        {fileObjects.map((fileObject, i) => {\n          return (\n            <Grid\n              {...previewGridProps.item}\n              item={true}\n              key={`${fileObject.file?.name ?? \"file\"}-${i}`}\n              className={classes.imageContainer}\n            >\n              <Chip\n                variant=\"outlined\"\n                {...previewChipProps}\n                label={fileObject.file.name}\n                onDelete={handleRemove(i)}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid\n      spacing={8}\n      {...previewGridProps.container}\n      container={true}\n      className={clsx(classes.root, previewGridClasses.container)}\n    >\n      {fileObjects.map((fileObject, i) => {\n        return (\n          <Grid\n            xs={4}\n            {...previewGridProps.item}\n            item={true}\n            key={`${fileObject.file?.name ?? \"file\"}-${i}`}\n            className={clsx(classes.imageContainer, previewGridClasses.item)}\n          >\n            {getPreviewIcon(fileObject, classes)}\n\n            {showFileNames && (\n              <Typography variant=\"body1\" component=\"p\">\n                {fileObject.file.name}\n              </Typography>\n            )}\n\n            <Fab\n              onClick={handleRemove(i)}\n              aria-label=\"Delete\"\n              className={classes.removeButton}\n            >\n              <DeleteIcon />\n            </Fab>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n\nPreviewList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getPreviewIcon: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  previewChipProps: PropTypes.object,\n  previewGridClasses: PropTypes.object,\n  previewGridProps: PropTypes.object,\n  showFileNames: PropTypes.bool,\n  useChipsForPreview: PropTypes.bool,\n};\n\nexport default withStyles(styles, { name: \"MuiDropzonePreviewList\" })(\n  PreviewList\n);\n","import IconButton from \"@mui/material/IconButton\";\nimport SnackbarContent from \"@mui/material/SnackbarContent\";\nimport { withStyles } from \"@mui/material\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport * as React from \"react\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n  successAlert: {\n    backgroundColor: theme?.palette?.success?.main,\n  },\n  errorAlert: {\n    backgroundColor: theme?.palette?.error?.main,\n  },\n  infoAlert: {\n    backgroundColor: theme?.palette?.info?.main,\n  },\n  warningAlert: {\n    backgroundColor: theme?.palette?.warning?.main,\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& > svg\": {\n      marginRight: theme?.spacing?.(1),\n    },\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n  },\n  closeButton: {},\n});\n\nconst SnackbarContentWrapper = React.forwardRef((props, ref) => {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      ref={ref}\n      className={clsx(classes[`${variant}Alert`], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classes.icon} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n});\n\nSnackbarContentWrapper.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired,\n};\n\nSnackbarContentWrapper.displayName = \"SnackbarContentWrapper\";\n\nexport default withStyles(styles, { name: \"MuiDropzoneSnackbar\" })(\n  SnackbarContentWrapper\n);\n","import Snackbar from \"@mui/material/Snackbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { withStyles } from \"@mui/material\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport { Fragment } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { convertBytesToMbsOrKbs, isImage, readFile } from \"../helpers\";\nimport PreviewList from \"./PreviewList\";\nimport SnackbarContentWrapper from \"./SnackbarContentWrapper\";\n\nconst styles = ({ palette, shape, spacing }) => ({\n  \"@keyframes progress\": {\n    \"0%\": {\n      backgroundPosition: \"0 0\",\n    },\n    \"100%\": {\n      backgroundPosition: \"-70px 0\",\n    },\n  },\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n    minHeight: \"250px\",\n    backgroundColor: palette?.background?.paper,\n    border: \"dashed\",\n    borderColor: palette?.divider,\n    borderRadius: shape?.borderRadius,\n    boxSizing: \"border-box\",\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n  },\n  active: {\n    animation: \"$progress 2s linear infinite !important\",\n    // eslint-disable-next-line max-len\n    backgroundImage: `repeating-linear-gradient(-45deg, ${palette?.background?.paper}, ${palette?.background?.paper} 25px, ${palette?.divider} 25px, ${palette?.divider} 50px)`,\n    backgroundSize: \"150% 100%\",\n    border: \"solid\",\n    borderColor: palette?.primary?.light,\n  },\n  invalid: {\n    // eslint-disable-next-line max-len\n    backgroundImage: `repeating-linear-gradient(-45deg, ${palette?.error?.light}, ${palette?.error?.light} 25px, ${palette?.error?.dark} 25px, ${palette?.error?.dark} 50px)`,\n    borderColor: palette?.error?.main,\n  },\n  textContainer: {\n    textAlign: \"center\",\n  },\n  text: {\n    marginBottom: spacing?.(3),\n    marginTop: spacing?.(3),\n  },\n  icon: {\n    width: 51,\n    height: 51,\n    color: palette?.text?.primary,\n  },\n});\n\nconst defaultSnackbarAnchorOrigin = {\n  horizontal: \"left\",\n  vertical: \"bottom\",\n};\n\nconst defaultGetPreviewIcon = (fileObject, classes) => {\n  if (isImage(fileObject.file)) {\n    return (\n      <img\n        className={classes.image}\n        role=\"presentation\"\n        src={fileObject.data}\n      />\n    );\n  }\n\n  return <AttachFileIcon className={classes.image} />;\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nclass DropzoneAreaBase extends React.PureComponent {\n  state = {\n    openSnackBar: false,\n    snackbarMessage: \"\",\n    snackbarVariant: \"success\",\n  };\n\n  notifyAlert() {\n    const { onAlert } = this.props;\n    const { openSnackBar, snackbarMessage, snackbarVariant } = this.state;\n    if (openSnackBar && onAlert) {\n      onAlert(snackbarMessage, snackbarVariant);\n    }\n  }\n\n  handleDropAccepted = async (acceptedFiles, evt) => {\n    const {\n      fileObjects,\n      filesLimit,\n      getFileAddedMessage,\n      getFileLimitExceedMessage,\n      onAdd,\n      onDrop,\n    } = this.props;\n\n    if (\n      filesLimit > 1 &&\n      fileObjects.length + acceptedFiles.length > filesLimit\n    ) {\n      this.setState(\n        {\n          openSnackBar: true,\n          snackbarMessage: getFileLimitExceedMessage(filesLimit),\n          snackbarVariant: \"error\",\n        },\n        this.notifyAlert\n      );\n      return;\n    }\n\n    // Notify Drop event\n    if (onDrop) {\n      onDrop(acceptedFiles, evt);\n    }\n\n    // Retrieve fileObjects data\n    const fileObjs = await Promise.all(\n      acceptedFiles.map(async (file) => {\n        const data = await readFile(file);\n        return {\n          file,\n          data,\n        };\n      })\n    );\n\n    // Notify added files\n    if (onAdd) {\n      onAdd(fileObjs);\n    }\n\n    // Display message\n    const message = fileObjs.reduce(\n      (msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name),\n      \"\"\n    );\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: message,\n        snackbarVariant: \"success\",\n      },\n      this.notifyAlert\n    );\n  };\n\n  handleDropRejected = (rejectedFiles, evt) => {\n    const {\n      acceptedFiles,\n      filesLimit,\n      fileObjects,\n      getDropRejectMessage,\n      getFileLimitExceedMessage,\n      maxFileSize,\n      onDropRejected,\n    } = this.props;\n\n    let message = \"\";\n    if (fileObjects.length + rejectedFiles.length > filesLimit) {\n      message = getFileLimitExceedMessage(filesLimit);\n    } else {\n      rejectedFiles.forEach((rejectedFile) => {\n        message = getDropRejectMessage(\n          rejectedFile,\n          acceptedFiles,\n          maxFileSize\n        );\n      });\n    }\n\n    if (onDropRejected) {\n      onDropRejected(rejectedFiles, evt);\n    }\n\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: message,\n        snackbarVariant: \"error\",\n      },\n      this.notifyAlert\n    );\n  };\n\n  handleRemove = (fileIndex) => (event) => {\n    event.stopPropagation();\n\n    const { fileObjects, getFileRemovedMessage, onDelete } = this.props;\n\n    // Find removed fileObject\n    const removedFileObj = fileObjects[fileIndex];\n\n    // Notify removed file\n    if (onDelete) {\n      onDelete(removedFileObj, fileIndex);\n    }\n\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\n        snackbarVariant: \"info\",\n      },\n      this.notifyAlert\n    );\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      openSnackBar: false,\n    });\n  };\n\n  render() {\n    const {\n      acceptedFiles,\n      alertSnackbarProps,\n      classes,\n      disableRejectionFeedback,\n      dropzoneClass,\n      dropzoneParagraphClass,\n      dropzoneProps,\n      dropzoneText,\n      fileObjects,\n      filesLimit,\n      getPreviewIcon,\n      Icon,\n      inputProps,\n      maxFileSize,\n      previewChipProps,\n      previewGridClasses,\n      previewGridProps,\n      previewText,\n      showAlerts,\n      showFileNames,\n      showFileNamesInPreview,\n      showPreviews,\n      showPreviewsInDropzone,\n      useChipsForPreview,\n    } = this.props;\n    const { openSnackBar, snackbarMessage, snackbarVariant } = this.state;\n\n    const acceptFiles = acceptedFiles?.join(\",\");\n    const isMultiple = filesLimit > 1;\n    const previewsVisible = showPreviews && fileObjects.length > 0;\n    const previewsInDropzoneVisible =\n      showPreviewsInDropzone && fileObjects.length > 0;\n\n    return (\n      <Fragment>\n        <Dropzone\n          {...dropzoneProps}\n          accept={acceptFiles}\n          onDropAccepted={this.handleDropAccepted}\n          onDropRejected={this.handleDropRejected}\n          maxSize={maxFileSize}\n          multiple={isMultiple}\n        >\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n            <div\n              {...getRootProps({\n                className: clsx(\n                  classes.root,\n                  dropzoneClass,\n                  isDragActive && classes.active,\n                  !disableRejectionFeedback && isDragReject && classes.invalid\n                ),\n              })}\n            >\n              <input {...getInputProps(inputProps)} />\n\n              <div className={classes.textContainer}>\n                <Typography\n                  variant=\"h5\"\n                  component=\"p\"\n                  className={clsx(classes.text, dropzoneParagraphClass)}\n                >\n                  {dropzoneText}\n                </Typography>\n                {Icon ? (\n                  <Icon className={classes.icon} />\n                ) : (\n                  <CloudUploadIcon className={classes.icon} />\n                )}\n              </div>\n\n              {previewsInDropzoneVisible && (\n                <PreviewList\n                  fileObjects={fileObjects}\n                  handleRemove={this.handleRemove}\n                  getPreviewIcon={getPreviewIcon}\n                  showFileNames={showFileNames}\n                  useChipsForPreview={useChipsForPreview}\n                  previewChipProps={previewChipProps}\n                  previewGridClasses={previewGridClasses}\n                  previewGridProps={previewGridProps}\n                />\n              )}\n            </div>\n          )}\n        </Dropzone>\n\n        {previewsVisible && (\n          <Fragment>\n            <Typography variant=\"subtitle1\" component=\"span\">\n              {previewText}\n            </Typography>\n\n            <PreviewList\n              fileObjects={fileObjects}\n              handleRemove={this.handleRemove}\n              getPreviewIcon={getPreviewIcon}\n              showFileNames={showFileNamesInPreview}\n              useChipsForPreview={useChipsForPreview}\n              previewChipProps={previewChipProps}\n              previewGridClasses={previewGridClasses}\n              previewGridProps={previewGridProps}\n            />\n          </Fragment>\n        )}\n\n        {((typeof showAlerts === \"boolean\" && showAlerts) ||\n          (Array.isArray(showAlerts) &&\n            showAlerts.includes(snackbarVariant))) && (\n          <Snackbar\n            anchorOrigin={defaultSnackbarAnchorOrigin}\n            autoHideDuration={6000}\n            {...alertSnackbarProps}\n            open={openSnackBar}\n            onClose={this.handleCloseSnackbar}\n          >\n            <SnackbarContentWrapper\n              onClose={this.handleCloseSnackbar}\n              variant={snackbarVariant}\n              message={snackbarMessage}\n            />\n          </Snackbar>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nDropzoneAreaBase.defaultProps = {\n  acceptedFiles: [],\n  filesLimit: 3,\n  fileObjects: [],\n  maxFileSize: 3000000,\n  dropzoneText: \"Drag and drop a file here or click\",\n  previewText: \"Preview:\",\n  disableRejectionFeedback: false,\n  showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\n  showPreviewsInDropzone: true,\n  showFileNames: false,\n  showFileNamesInPreview: false,\n  useChipsForPreview: false,\n  previewChipProps: {},\n  previewGridClasses: {},\n  previewGridProps: {},\n  showAlerts: true,\n  alertSnackbarProps: {\n    anchorOrigin: {\n      horizontal: \"left\",\n      vertical: \"bottom\",\n    },\n    autoHideDuration: 6000,\n  },\n  getFileLimitExceedMessage: (filesLimit) =>\n    `Maximum allowed number of files exceeded. Only ${filesLimit} allowed`,\n  getFileAddedMessage: (fileName) => `File ${fileName} successfully added.`,\n  getPreviewIcon: defaultGetPreviewIcon,\n  getFileRemovedMessage: (fileName) => `File ${fileName} removed.`,\n  getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n    let message = `File ${rejectedFile.name} was rejected. `;\n    if (!acceptedFiles.includes(rejectedFile.type)) {\n      message += \"File type not supported. \";\n    }\n    if (rejectedFile.size > maxFileSize) {\n      message +=\n        \"File is too big. Size limit is \" +\n        convertBytesToMbsOrKbs(maxFileSize) +\n        \". \";\n    }\n    return message;\n  },\n};\n\nexport const FileObjectShape = PropTypes.shape({\n  file: PropTypes.object,\n  data: PropTypes.any,\n});\n\nDropzoneAreaBase.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** A list of file types to accept.\n   * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n   */\n  acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n  /** Icon to be displayed inside the dropzone area. */\n  Icon: PropTypes.elementType,\n  /** Currently loaded files. */\n  fileObjects: PropTypes.arrayOf(FileObjectShape),\n  /** Maximum file size (in bytes) that the dropzone will accept. */\n  maxFileSize: PropTypes.number,\n  /** Text inside the dropzone. */\n  dropzoneText: PropTypes.string,\n  /** Custom CSS class name for dropzone container. */\n  dropzoneClass: PropTypes.string,\n  /** Custom CSS class name for text inside the container. */\n  dropzoneParagraphClass: PropTypes.string,\n  /** Disable feedback effect when dropping rejected files. */\n  disableRejectionFeedback: PropTypes.bool,\n  /** Shows previews **BELOW** the dropzone. */\n  showPreviews: PropTypes.bool,\n  /** Shows preview **INSIDE** the dropzone area. */\n  showPreviewsInDropzone: PropTypes.bool,\n  /** Shows file name under the dropzone image. */\n  showFileNames: PropTypes.bool,\n  /** Shows file name under the image. */\n  showFileNamesInPreview: PropTypes.bool,\n  /** Uses deletable Material-UI Chip components to display file names. */\n  useChipsForPreview: PropTypes.bool,\n  /**\n   * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n   *\n   * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n   */\n  previewChipProps: PropTypes.object,\n  /**\n   * Custom CSS classNames for preview Grid components.<br/>\n   * Should be in the form {container: string, item: string, image: string}.\n   */\n  previewGridClasses: PropTypes.object,\n  /**\n   * Props to pass to the Material-UI Grid components.<br/>\n   * Should be in the form {container: GridProps, item: GridProps}.\n   *\n   * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n   */\n  previewGridProps: PropTypes.object,\n  /** The label for the file preview section. */\n  previewText: PropTypes.string,\n  /**\n   * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n   *\n   * - can be a boolean (\"global\" `true` or `false` for all alerts).\n   * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n   *  - showAlerts={['error']} for only errors.\n   *  - showAlerts={['error', 'info']} for both errors and info.\n   *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n   *  - showAlerts={[]} is same as showAlerts={false}.\n   */\n  showAlerts: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.oneOf([\"error\", \"success\", \"info\"])),\n  ]),\n  /**\n   * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n   *\n   * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n   */\n  alertSnackbarProps: PropTypes.object,\n  /**\n   * Props to pass to the Dropzone component.\n   *\n   * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n   */\n  dropzoneProps: PropTypes.object,\n  /**\n   * Attributes applied to the input element.\n   *\n   * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Get alert message to display when files limit is exceed.\n   *\n   * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n   *\n   * @param {number} filesLimit The `filesLimit` currently set for the component.\n   */\n  getFileLimitExceedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a new file is added.\n   *\n   * *Default*: \"File ${fileName} successfully added.\"\n   *\n   * @param {string} fileName The newly added file name.\n   */\n  getFileAddedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is removed.\n   *\n   * *Default*: \"File ${fileName} removed.\"\n   *\n   * @param {string} fileName The name of the removed file.\n   */\n  getFileRemovedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is rejected onDrop.\n   *\n   * *Default*: \"File ${rejectedFile.name} was rejected.\"\n   *\n   * @param {Object} rejectedFile The file that got rejected\n   * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n   * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n   */\n  getDropRejectMessage: PropTypes.func,\n  /**\n   * A function which determines which icon to display for a file preview.\n   *\n   * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n   *\n   * @param {FileObject} objectFile The file which the preview will belong to\n   * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n   */\n  getPreviewIcon: PropTypes.func,\n  /**\n   * Fired when new files are added to dropzone.\n   *\n   * @param {FileObject[]} newFiles The new files added to the dropzone.\n   */\n  onAdd: PropTypes.func,\n  /**\n   * Fired when a file is deleted from the previews panel.\n   *\n   * @param {FileObject} deletedFileObject The file that was removed.\n   * @param {number} index The index of the removed file object.\n   */\n  onDelete: PropTypes.func,\n  /**\n   * Fired when the user drops files into the dropzone.\n   *\n   * @param {File[]} droppedFiles All the files dropped into the dropzone.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDrop: PropTypes.func,\n  /**\n   * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n   *\n   * @param {File[]} rejectedFiles All the rejected files.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDropRejected: PropTypes.func,\n  /**\n   * Fired when an alert is triggered.\n   *\n   * @param {string} message Alert message.\n   * @param {string} variant One of \"error\", \"info\", \"success\".\n   */\n  onAlert: PropTypes.func,\n};\n\nexport default withStyles(styles, { name: \"MuiDropzoneArea\" })(\n  DropzoneAreaBase\n);\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\nconst splitDropzoneAreaProps = (props) => {\n    const {clearOnUnmount, initialFiles, onChange, onDelete, ...dropzoneAreaProps} = props;\n    return [{clearOnUnmount, initialFiles, onChange, onDelete}, dropzoneAreaProps];\n};\n\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\nclass DropzoneArea extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    render() {\n        const [, dropzoneAreaProps] = splitDropzoneAreaProps(this.props);\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneAreaBase\n                {...dropzoneAreaProps}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n            />\n        );\n    }\n}\n\nDropzoneArea.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneArea.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /**\n     * Fired when the files inside dropzone change.\n     *\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {File} deletedFile The file that was removed.\n     */\n    onDelete: PropTypes.func,\n};\n\nexport default DropzoneArea;\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\n// Split props related to DropzoneDialog from DropzoneArea ones\nfunction splitDropzoneDialogProps(allProps) {\n    const {\n        cancelButtonText,\n        dialogProps,\n        dialogTitle,\n        fullWidth,\n        maxWidth,\n        onClose,\n        onSave,\n        open,\n        submitButtonText,\n        ...dropzoneAreaProps\n    } = allProps;\n\n    return [\n        {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        },\n        dropzoneAreaProps,\n    ];\n}\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\nclass DropzoneDialogBase extends React.PureComponent {\n    render() {\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\n        const {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        } = dropzoneDialogProps;\n\n        // Submit button state\n        const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n\n        return (\n            <Dialog\n                {...dialogProps}\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                onClose={onClose}\n                open={open}\n            >\n                <DialogTitle>{dialogTitle}</DialogTitle>\n\n                <DialogContent>\n                    <DropzoneAreaBase\n                        {...dropzoneAreaProps}\n                    />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        {cancelButtonText}\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        disabled={submitDisabled}\n                        onClick={onSave}\n                    >\n                        {submitButtonText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDropzoneDialogBase.defaultProps = {\n    open: false,\n    dialogTitle: 'Upload file',\n    dialogProps: {},\n    fullWidth: true,\n    maxWidth: 'sm',\n    cancelButtonText: 'Cancel',\n    submitButtonText: 'Submit',\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    showFileNamesInPreview: true,\n};\n\nDropzoneDialogBase.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Sets whether the dialog is open or closed. */\n    open: PropTypes.bool,\n    /** The Dialog title. */\n    dialogTitle: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n    ]),\n    /**\n     * Props to pass to the Material-UI Dialog components.\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n     */\n    dialogProps: PropTypes.object,\n    /**\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\n     * Notice that the dialog width grow is limited by the default margin.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n     * Set to `false` to disable `maxWidth`.\n     */\n    maxWidth: PropTypes.string,\n    /** Cancel button text in dialog. */\n    cancelButtonText: PropTypes.string,\n    /** Submit button text in dialog. */\n    submitButtonText: PropTypes.string,\n    /**\n     * Fired when the modal is closed.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onClose: PropTypes.func,\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onSave: PropTypes.func,\n    /**\n     * Shows previews **BELOW** the dropzone.<br/>\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n     */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialogBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneDialogBase from './DropzoneDialogBase';\n\n\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\nclass DropzoneDialog extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    handleClose = (evt) => {\n        const {clearOnUnmount, onClose} = this.props;\n\n        if (onClose) {\n            onClose(evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    handleSave = (evt) => {\n        const {clearOnUnmount, onSave} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onSave) {\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    render() {\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneDialogBase\n                {...this.props}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n                onClose={this.handleClose}\n                onSave={this.handleSave}\n            />\n        );\n    }\n}\n\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneDialog.propTypes = {\n    ...DropzoneDialogBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {File[]} files All the files currently inside the Dropzone.\n     * @param {SyntheticEvent} event The react `SyntheticEvent`.\n     */\n    onSave: PropTypes.func,\n};\n\nexport default DropzoneDialog;\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","styles","palette","shape","spacing","root","imageContainer","position","zIndex","textAlign","opacity","image","height","width","maxWidth","color","text","primary","transition","boxSizing","boxShadow","borderRadius","removeButton","top","right","React.createElement","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","classes","getPreviewIcon","container","clsx","map","fileObject","i","item","name","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","withStyles","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","theme","successAlert","backgroundColor","main","errorAlert","infoAlert","warningAlert","message","display","alignItems","marginRight","icon","fontSize","closeButton","SnackbarContentWrapper","React","props","ref","className","onClose","variant","other","Icon","string","node","oneOf","displayName","backgroundPosition","minHeight","background","paper","border","borderColor","divider","cursor","overflow","active","animation","backgroundImage","backgroundSize","light","invalid","dark","textContainer","marginBottom","marginTop","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","DropzoneAreaBase","state","openSnackBar","snackbarMessage","snackbarVariant","handleDropAccepted","acceptedFiles","evt","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onAdd","onDrop","length","setState","notifyAlert","all","fileObjs","reduce","msg","fileObj","handleDropRejected","rejectedFiles","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","getFileRemovedMessage","onDelete","removedFileObj","handleCloseSnackbar","onAlert","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","Fragment","getRootProps","getInputProps","isDragActive","isDragReject","Array","isArray","includes","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","number","elementType","oneOfType","splitDropzoneAreaProps","clearOnUnmount","initialFiles","onChange","dropzoneAreaProps","DropzoneArea","notifyFileChange","loadInitialFiles","initialFile","concat","console","log","addFiles","newFileObjects","deleteFile","removedFileObjIdx","remainingFileObjs","filter","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","open","submitButtonText","DropzoneDialogBase","dropzoneDialogProps","submitDisabled","element","DropzoneDialog","handleClose","handleSave"],"mappings":"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"}